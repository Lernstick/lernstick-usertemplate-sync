#!/bin/bash

set -e

# copy stdout and stderr to /var/log/lernstick-usertemplate-sync.log
LOGFILE="/var/log/lernstick-usertemplate-sync.log"
echo "========= lernstick-usertemplate-sync run started at $(date)" >> $LOGFILE
exec > >(tee --append --ignore-interrupts $LOGFILE) 2>&1

TEMPLATEDIR="/etc/skel/"
USER="user"
EXCLUDE_PATTERN="*.dpkg-new"

# the REGDIR contains the last unmodified version of every config file
REGDIR="/var/lib/lernstick-usertemplate-sync/${USER}"

# create regdir
[ -d "$REGDIR" ] || mkdir -p "$REGDIR"

# copy *only(!)* new files to REGDIR
cd "${TEMPLATEDIR}"
rsync --verbose --ignore-existing --exclude "${EXCLUDE_PATTERN}" --recursive ./ "${REGDIR}/"

# abort if the user doesn't exist yet (happens during installation time)
id --user --name "${USER}" > /dev/null 2>&1 || exit 0

GROUP="$(id --group --name ${USER})"
USERHOME="$(getent passwd "${USER}" | cut -d: -f6)"

# abort if the users home directory doesn't exist yet
[ -d "${USERHOME}" ] || exit 0

sync_with_home()
{
	if [ -d "${1}" ]
	then
		mkdir -p "${USERHOME}/${1}"
	else
		cp -av --parents "${1}" "${USERHOME}"
	fi
	chown "$USER:$GROUP" "${USERHOME}/${1}"
}

# sync template files to user's home and unmodified files to registry
sync_template()
{
	# remove template prefix from filename
	FILE="$(echo "$1" | sed -e "s|^${TEMPLATEDIR}||")"

	# check if template file already exists in user's home
	if [ -f "${USERHOME}/${FILE}" ]
	then
		# handling for already existing normal files
		echo "${FILE} is already in user's home"

		# check if user modified the file
		if cmp -s "${REGDIR}/${FILE}" "${USERHOME}/${FILE}"
		then
			echo "${FILE} is unmodified"
			# check if there is a new version in the template
			if cmp -s "${REGDIR}/${FILE}" "${TEMPLATEDIR}/${FILE}"
			then
				echo "${FILE} has no new version in the template"
			else
				echo "${FILE} has a new version in the template"
				# copy file to home and registry
				sync_with_home "${FILE}"
				cp -av --parents "${FILE}" "${REGDIR}"
			fi
		else
			echo "${FILE} is modified"
		fi

	elif [ -d "${USERHOME}/${FILE}" ]
	then
		# handling for already existing directories
		echo "${FILE} is already in user's home"
		# TODO: is there anything to do for already existing directories?

	elif [ -h "${USERHOME}/${FILE}" ]
	then
		# handling for alredy existing symlinks
		echo "${FILE} is already in user's home"

		if [ $(readlink -f "${REGDIR}/${FILE}") = $(readlink -f "${USERHOME}/${FILE}") ]
		then
			echo "${FILE} is unmodified"
			# check if there is a new version in the template
			if [ $(readlink -f "${REGDIR}/${FILE}") = $(readlink -f "${TEMPLATEDIR}/${FILE}") ]
			then
				echo "${FILE} has no new version in the template"
			else
				echo "${FILE} has a new version in the template"
				# copy file to home and registry
				sync_with_home "${FILE}"
				cp -av --parents "${FILE}" "${REGDIR}"
			fi
		else
			echo "${FILE} is modified"
		fi

	else
		echo "${FILE} is not yet in user's home"
		# copy file to user's home
		sync_with_home "${FILE}"
	fi
}
find "${TEMPLATEDIR}" ! -name "${EXCLUDE_PATTERN}" | while read FILE; do sync_template "${FILE}"; done
